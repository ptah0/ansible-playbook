---
- name: Install Zsh
  become: true
  become_user: root
  ansible.builtin.apt:
    name:
      - zsh

- name: Obtain zsh bin location
  become: true
  become_user: root
  ansible.builtin.command:
    cmd: which zsh
  changed_when: false
  register: zsh

- name: Set var USER, ZSH_BIN
  ansible.builtin.set_fact:
    shell_user: "{{ ansible_user }}"
    shell_zsh_bin: "{{ zsh.stdout }}"

- name: Change default shell to zsh
  become: true
  become_user: root
  ansible.builtin.user:
    name: "{{ shell_user }}"
    shell: "{{ shell_zsh_bin }}"

- name: Update .zprofile
  ansible.builtin.blockinfile:
    path: $HOME/.zprofile
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      if [ -f "$HOME/.profile" ] ; then
          emulate zsh -c 'source $HOME/.profile'
      fi
    insertbefore: BOF
    create: true
    mode: "644"
    state: present

- name: Get stats of .zshrc
  ansible.builtin.stat:
    path: $HOME/.zshrc
  register: zshrc

- name: Set default shell to zsh
  when: not zshrc.stat.exists
  block:
    - name: Download zsh-installer
      ansible.builtin.get_url:
        url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/zsh-installer.sh
        mode: "644"

    - name: Add Permission to zsh-installer.sh
      ansible.builtin.file:
        path: /tmp/zsh-installer.sh
        mode: u+x

    - name: Remove .oh-my-zsh in order to run the zsh-installer.sh
      ansible.builtin.file:
        path: $HOME/.oh-my-zsh
        state: absent

    - name: Execute the zsh-installer.sh
      ansible.builtin.command:
        cmd: /tmp/zsh-installer.sh --unattended
      changed_when: true

- name: Config Zsh - Disable AUTO_TITLE
  ansible.builtin.replace:
    path: $HOME/.zshrc
    regexp: "^# (DISABLE_AUTO_TITLE=.*)"
    replace: '\1'

- name: Install Dracula theme
  ansible.builtin.git:
    repo: https://github.com/dracula/zsh.git
    dest: $HOME/.oh-my-zsh/custom/themes/dracula
    depth: 1

- name: Link Dracula theme
  ansible.builtin.file:
    src: dracula/dracula.zsh-theme
    dest: $HOME/.oh-my-zsh/custom/themes/dracula.zsh-theme
    state: link

- name: Remove Default theme
  ansible.builtin.replace:
    path: $HOME/.zshrc
    regexp: "^(ZSH_THEME=.*robbyrussell.*)"
    replace: '#\1'

- name: Set Dracula theme
  ansible.builtin.lineinfile:
    path: $HOME/.zshrc
    search_string: ZSH_THEME="dracula"
    insertafter: "^#ZSH_THEME.*"
    line: ZSH_THEME="dracula"
    create: true
    mode: "644"
    state: present

- name: Set Dracula theme Options
  ansible.builtin.lineinfile:
    path: $HOME/.zshrc
    search_string: DRACULA_DISPLAY_CONTEXT=1
    insertafter: "^ZSH_THEME=.*"
    line: DRACULA_DISPLAY_CONTEXT=1
    create: true
    mode: "644"
    state: present

- name: Update .zshrc config
  ansible.builtin.blockinfile:
    path: $HOME/.zshrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      plugins=($plugins aliases systemd)
    insertbefore: '^source \$ZSH\/oh-my-zsh\.sh'
    create: true
    mode: "644"
    state: present

- name: Insert an empty line before the marker line
  ansible.builtin.replace:
    path: $HOME/.zshrc
    regexp: '(?<=.\n)^(# BEGIN ANSIBLE MANAGED BLOCK.*)$'
    replace: '\n\1'

- name: Insert an empty line after the marker line
  ansible.builtin.replace:
    path: $HOME/.zshrc
    regexp: '^(# END ANSIBLE MANAGED BLOCK.*)$(?=\n.)'
    replace: '\1\n'
